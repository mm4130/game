(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _Main = require("./src/Main.js");

new _Main.Main();
},{"./src/Main.js":3}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Director = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _DataStore = require("./base/DataStore.js");

var _liwu2 = require("./play/liwu.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/** 舞台类 */
var Director = exports.Director = function () {
    function Director() {
        _classCallCheck(this, Director);

        this.dataStore = _DataStore.DataStore.getInstance();
        this.timeDown = 60 * 60;
        // 上一秒的时间
        this.pro_sec = 0;
        //　游戏是否开始
        this.gameFlag = true;
        this.startFlag = false;
    }

    _createClass(Director, [{
        key: "createLiwu",


        /** 绘制礼物的方法 */
        value: function createLiwu() {
            this.dataStore.get('liwu').push(new _liwu2.liwu());
        }

        /**
         * 小时级倒计时动画
         * @param  {String} time [服务器时间戳]
         * @param  {String} timeDown [倒计时截至时间]
         */

    }, {
        key: "_timeAnimation",
        value: function _timeAnimation(time, timeDown) {
            var timeTemp = void 0,
                // 临时时间
            remain_sec = 0,
                // 秒
            remain_minute = 0,
                // 分钟
            remain_hour = 0,
                // 小时
            hour = 0,
                // 最终显示小时
            min = 0,
                // 最终显示分钟
            sec = 0; // 最终显示秒
            timeTemp = this.timeDown / 60 + 1;
            remain_sec = parseInt(timeTemp % 60);
            timeTemp = parseInt(timeTemp / 60);

            remain_minute = timeTemp % 60;
            timeTemp = parseInt(timeTemp / 60);
            if (remain_minute <= 0) {
                remain_minute = 0;
            }
            if (remain_sec <= 0) {
                remain_sec = 0;
            }
            if (remain_sec == 0 && remain_minute == 0) {
                this.gameOver();
            }
            // 以下部分做为时间显示时补零
            if (remain_hour < 10) {
                hour = '0' + remain_hour;
            } else {
                hour = remain_hour;
            }
            if (remain_minute < 10) {
                min = '0' + remain_minute;
            } else {
                min = remain_minute;
            }
            if (remain_sec < 10) {
                sec = '0' + remain_sec;
            } else {
                sec = remain_sec;
            }
            return min + ":" + sec;
            // return hour+":"+min+":"+sec;
        }

        /** 游戏结束 */

    }, {
        key: "gameOver",
        value: function gameOver() {
            if (this.gameFlag) {
                // this.dataStore.get('startButton').draw();
                cancelAnimationFrame(this.dataStore.get('animationTimer'));
                this.gameFlag = false;
                this.startFlag = false;
                this.dataStore.destroy();
            }
        }
    }, {
        key: "run",
        value: function run() {
            var _this = this;

            if (this.gameFlag) {
                this.dataStore.get('background').draw();
                this.dataStore.get('timerPlane').draw();
                // this.dataStore.get('tiaowen').draw();

                // this._timeAnimation();
                var timeStr = this._timeAnimation(this.timeDown);
                this.timeDown--;

                this.dataStore.get('timer').draw(timeStr);
                var _liwu = this.dataStore.get('liwu');
                if (_liwu.length == 0) {
                    this.createLiwu();
                } else if (_liwu.length < 6 && _liwu[_liwu.length - 1].level == 2) {
                    this.createLiwu();
                }
                if (_liwu[0].liwuFlag) {
                    _liwu.shift();
                }

                this.dataStore.get('liwu').forEach(function (value) {
                    value.draw();
                });
                var animationTimer = requestAnimationFrame(function () {
                    return _this.run();
                });
                this.dataStore.put('animationTimer', animationTimer);
            } else {
                this.gameOver();
            }
        }
    }], [{
        key: "getInstance",
        value: function getInstance() {
            if (!Director.instance) {
                Director.instance = new Director();
            }
            return Director.instance;
        }
    }]);

    return Director;
}();
},{"./base/DataStore.js":4,"./play/liwu.js":9}],3:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Main = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 主要的基类


var _ResourceLoader = require('./base/ResourceLoader.js');

var _DataStore = require('./base/DataStore.js');

var _BackGround = require('./runtime/BackGround.js');

var _Director = require('./Director.js');

var _liwu = require('./play/liwu.js');

var _timer = require('./play/timer.js');

var _timerPlane = require('./play/timerPlane.js');

var _tiaowen = require('./play/tiaowen.js');

var _win2 = require('./play/win.js');

var _fail3 = require('./play/fail.js');

var _liwuopen = require('./play/liwuopen.js');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Main = function () {
    function Main() {
        var _this = this;

        _classCallCheck(this, Main);

        this.getWindowsWidthOrHeight();
        document.getElementById('game_canvas').width = this.htmlWidth;
        document.getElementById('game_canvas').height = this.htmlHeight;
        // document.getElementById('game_canvas').width = 375;
        // document.getElementById('game_canvas').height = 665;
        this.failToFalse = false;
        this.canvas = document.getElementById('game_canvas');
        this.ctx = this.canvas.getContext('2d');
        this.dataStore = _DataStore.DataStore.getInstance();
        this.director = _Director.Director.getInstance();
        var loader = _ResourceLoader.ResourceLoader.create();
        loader.onLoaded(function (map) {
            return _this.onResourceFirstLoaded(map);
        });
    }

    /** 获取手机屏幕宽 */


    _createClass(Main, [{
        key: 'getWindowsWidthOrHeight',
        value: function getWindowsWidthOrHeight() {
            //得到手机屏幕的宽度
            this.htmlWidth = document.documentElement.clientWidth || document.body.clientWidth;
            this.htmlHeight = document.documentElement.clientHeight || document.body.clientHeight;
        }

        /** 资源加载 */

    }, {
        key: 'onResourceFirstLoaded',
        value: function onResourceFirstLoaded(map) {
            this.dataStore.canvas = this.canvas;
            this.dataStore.moveSpace = 5;
            this.dataStore.ctx = this.ctx;
            this.dataStore.res = map;
            // this.createBackgroundMusic();
            this.init();
        }

        /** 初始化 */

    }, {
        key: 'init',
        value: function init() {
            var _this2 = this;

            // 事件绑定关键

            document.getElementById('start').onclick = function () {
                if (!_this2.director.startFlag) {
                    _this2.director.run();
                    _this2.director.gameFlag = true;
                }
                _this2.director.startFlag = true;
            };

            //首先重置游戏是没有结束的
            // this.director.isGameOver = false;
            this.dataStore.put('background', _BackGround.BackGround).put('liwu', []).put('timer', _timer.timer).put('timerPlane', _timerPlane.timerPlane).put('tiaowen', _tiaowen.tiaowen).put('win', _win2.win).put('fail', _fail3.fail);
            this.registerEvent();
            this.dataStore.get('background').draw();
            // this.director.run();
        }

        /** 处理点击事件 */

    }, {
        key: 'registerEvent',
        value: function registerEvent() {
            var _this3 = this;

            this.canvas.addEventListener('touchstart', function (e) {
                //阻止事件冒泡
                e.preventDefault();
                if (_this3.director.gameFlag) {
                    var i = _this3.isLiwuTouch(e.changedTouches[0].clientX, e.changedTouches[0].clientY);
                    //这里出发点击事件 , i 代表第几个礼物s
                    var list = _this3.dataStore.get('liwu');

                    _this3.clickLogic(i, list);
                }
            });
        }

        /** 处理逻辑 */

    }, {
        key: 'clickLogic',
        value: function clickLogic(i, list) {
            if (i != 0) {
                // this.director.gameOver();

                var _win = this.dataStore.get('win');
                var _fail2 = this.dataStore.get('fail');
                var newList = [];
                var x = 0;
                var y = 0;
                for (var j = 0; j < list.length; j++) {
                    if (j == i - 1) {
                        x = list[j].x;
                        y = list[j].y;
                        var liwus = new _liwuopen.liwuopen(list[j].src, x, y, list[j].level);
                        newList[j] = liwus;
                        continue;
                    }
                    newList[j] = list[j];
                }
                // 失败的步骤
                this.fail(_fail2, newList, x, y, i, list);
                // 成功的步骤
                // this.success(win,newList,i,list);
            }
        }

        /** 失败操作 */

    }, {
        key: 'fail',
        value: function fail(_fail) {
            var newList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
            var x = arguments[2];
            var y = arguments[3];

            var _this4 = this;

            var i = arguments[4];
            var list = arguments[5];

            this.director.gameOver();
            if (!_fail.flag) {
                this.restUI();
                newList.forEach(function (value) {
                    value.draw();
                });
                this.ctx.save();
                _fail.draw(x, y);
                var animationFail = requestAnimationFrame(function () {
                    return _this4.clickLogic(i, list);
                });
                this.dataStore.put('animationFail', animationFail);
                if (!this.failToFalse) {
                    console.log("--" + this.failToFalse);
                    setTimeout(function () {
                        // 两秒后消失
                        _fail.flag = true;
                    }, 200);
                }
                this.failToFalse = true;
            } else {
                this.failToFalse = false;
                _fail.flag = false;
                this.dataStore.put('fail', _fail);
                this.restUI();
                newList.forEach(function (value) {
                    value.draw();
                });
                this.restGame(newList);
                cancelAnimationFrame(this.dataStore.get('animationFail'));
            }

            // this.restUI();
            // newList.forEach(value => {
            //     value.draw();
            // });
            // this.ctx.save();

            // this.dataStore.get('fail').draw(x,y);
            // setTimeout(()=>{
            //     // 两秒后消失
            //     this.restUI();
            //     newList.forEach(value => {
            //         value.draw();
            //     });
            //     this.restGame(newList);
            // },2000);
        }

        /** 恢复游戏 */

    }, {
        key: 'restGame',
        value: function restGame() {
            var newList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

            // 关闭动画
            // this.director.gameOver();
            console.log(newList);
            this.director.gameFlag = true;
            this.dataStore.put('liwu', newList);
            this.director.run();
        }

        /** 成功操作 */

    }, {
        key: 'success',
        value: function success(win) {
            var newList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

            var _this5 = this;

            var i = arguments[2];
            var list = arguments[3];

            this.director.gameOver();
            if (!win.winFlag) {
                this.restUI();
                newList.forEach(function (value) {
                    value.draw();
                });
                this.ctx.save();
                win.draw();
                var animationWin = requestAnimationFrame(function () {
                    return _this5.clickLogic(i, list);
                });
                this.dataStore.put('animationWin', animationWin);
            } else {
                this.ctx.globalAlpha = 1;
                win.winFlag = false;
                win.x = 100;
                win.y = 300;
                win.level = 1.1;
                this.dataStore.put('win', win);
                this.restUI();
                newList.forEach(function (value) {
                    value.draw();
                });
                cancelAnimationFrame(this.dataStore.get('animationWin'));
                this.restGame(newList);
            }
            // if (!win.winFlag) {
            //     this.restUI();
            //     newList.forEach(value => {
            //         value.draw();
            //     });
            //     this.ctx.save();
            //     win.draw();
            //     let animationWin = requestAnimationFrame(() => this.clickLogic(i, list));
            //     this.dataStore.put('animationWin', animationWin);
            // } else {
            //     this.ctx.globalAlpha = 1;
            //     win.winFlag = false;
            //     win.x = 100;
            //     win.y = 300;
            //     win.level = 1.1;
            //     this.dataStore.put('win',win);
            //     this.restUI();
            //     newList.forEach(value => {
            //         value.draw();
            //     });
            //     cancelAnimationFrame(this.dataStore.get('animationWin'));
            //     this.restGame(newList);
            // }
        }

        /** 复原现场 */

    }, {
        key: 'restUI',
        value: function restUI() {
            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
            this.dataStore.get('background').draw();
            this.dataStore.get('timerPlane').draw();
            var timeStr = this.director._timeAnimation(this.director.timeDown);
            this.dataStore.get('timer').draw(timeStr);
        }

        /** 判断礼物是否触摸 */

    }, {
        key: 'isLiwuTouch',
        value: function isLiwuTouch(x, y) {
            var i = 0;
            var liwu = this.dataStore.get('liwu');
            for (var j = 0; j < liwu.length; j++) {
                if (x >= liwu[j].x && x <= liwu[j].x + liwu[j].width && y <= liwu[j].y && y >= liwu[j].y - liwu[j].height && !liwu[j].openFlag) {
                    i = j + 1;
                    break;
                }
            }
            return i;
        }
    }, {
        key: 'getEventPosition',
        value: function getEventPosition(ev) {
            var x, y;
            if (ev.layerX || ev.layerX == 0) {
                x = ev.layerX;
                y = ev.layerY;
            } else if (ev.offsetX || ev.offsetX == 0) {
                // Opera
                x = ev.offsetX;
                y = ev.offsetY;
            }
            return { x: x, y: y };
        }
    }]);

    return Main;
}();

exports.Main = Main;
},{"./Director.js":2,"./base/DataStore.js":4,"./base/ResourceLoader.js":5,"./play/fail.js":8,"./play/liwu.js":9,"./play/liwuopen.js":10,"./play/tiaowen.js":11,"./play/timer.js":12,"./play/timerPlane.js":13,"./play/win.js":14,"./runtime/BackGround.js":15}],4:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// 变量缓存器，方便我们在不同的类中访问和修改变量
var DataStore = exports.DataStore = function () {
    _createClass(DataStore, null, [{
        key: 'getInstance',
        value: function getInstance() {
            if (!DataStore.instance) {
                DataStore.instance = new DataStore();
            }
            return DataStore.instance;
        }
    }]);

    function DataStore() {
        _classCallCheck(this, DataStore);

        this.map = new Map();
    }

    // 保存


    _createClass(DataStore, [{
        key: 'put',
        value: function put(key, value) {
            if (typeof value == 'function') {
                value = new value();
            }
            this.map.set(key, value);
            return this;
        }

        //销毁

    }, {
        key: 'destroy',
        value: function destroy() {
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = this.map.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var value = _step.value;

                    value = null;
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }
        }

        // 取出

    }, {
        key: 'get',
        value: function get(key) {
            return this.map.get(key);
        }
    }]);

    return DataStore;
}();
},{}],5:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ResourceLoader = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 资源文件加载器，确保canvas在图片资源加载完成后才进行渲染


var _Resources = require('./Resources.js');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ResourceLoader = exports.ResourceLoader = function () {
    function ResourceLoader() {
        _classCallCheck(this, ResourceLoader);

        this.map = new Map(_Resources.Resources);
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
            for (var _iterator = this.map[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var _step$value = _slicedToArray(_step.value, 2),
                    key = _step$value[0],
                    value = _step$value[1];

                var image = new Image();
                // const image = wx.createImage();
                image.src = value;
                this.map.set(key, image);
            }
        } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
        } finally {
            try {
                if (!_iteratorNormalCompletion && _iterator.return) {
                    _iterator.return();
                }
            } finally {
                if (_didIteratorError) {
                    throw _iteratorError;
                }
            }
        }
    }

    // 加载完成 调用回调


    _createClass(ResourceLoader, [{
        key: 'onLoaded',
        value: function onLoaded(callback) {
            var _this = this;

            var loadedCount = 0;
            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
                for (var _iterator2 = this.map.values()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var value = _step2.value;

                    value.onload = function () {
                        loadedCount++;
                        if (loadedCount >= _this.map.size) {
                            callback(_this.map);
                        }
                    };
                }
            } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                    }
                } finally {
                    if (_didIteratorError2) {
                        throw _iteratorError2;
                    }
                }
            }
        }

        // 工厂模式创造类

    }], [{
        key: 'create',
        value: function create() {
            return new ResourceLoader();
        }
    }]);

    return ResourceLoader;
}();
},{"./Resources.js":6}],6:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var Resources = exports.Resources = [['background', 'res/image/base.png'], ['begin', 'res/image/begin.png'], ['lijuan', 'res/image/lijuan.png'], ['liwu1', 'res/image/liwu1.png'], ['liwu2', 'res/image/liwu2.png'], ['liwu3', 'res/image/liwu3.png'], ['liwuopen1', 'res/image/liwuopen1.png'], ['liwuopen2', 'res/image/liwuopen2.png'], ['liwuopen3', 'res/image/liwuopen3.png'], ['qipao', 'res/image/qipao.png'], ['second', 'res/image/second.png'], ['tiaowen', 'res/image/tiaowen.png'], ['yishouji', 'res/image/yishouji.png']];
},{}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Sprite = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 精灵的基类，负责初始化精灵加载的资源和大小以及位置


var _DataStore = require("./DataStore.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Sprite = exports.Sprite = function () {
    function Sprite() {
        var img = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
        var srcX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var srcY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
        var srcW = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
        var srcH = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
        var x = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
        var y = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;
        var width = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;
        var height = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 0;

        _classCallCheck(this, Sprite);

        this.dataStore = _DataStore.DataStore.getInstance();
        this.ctx = this.dataStore.ctx;
        this.img = img;
        this.srcX = srcX;
        this.srcY = srcY;
        this.srcW = srcW;
        this.srcH = srcH;
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
    }

    _createClass(Sprite, [{
        key: "draw",


        /**
         * img 传入 Image 对象
         * srcX 要剪裁的起始X坐标
         * srcY 要剪裁的起始Y坐标
         * srcW 剪裁的宽度
         * srcH 剪裁的高度
         * x 放置的x坐标
         * y 放置的Y坐标
         * width 要使用的宽度
         * height 要使用的高度
         */
        value: function draw() {
            var img = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.img;
            var srcX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.srcX;
            var srcY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.srcY;
            var srcW = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.srcW;
            var srcH = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.srcH;
            var x = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : this.x;
            var y = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : this.y;
            var width = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : this.width;
            var height = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : this.height;

            this.ctx.drawImage(img, srcX, srcY, srcW, srcH, x, y, width, height);
        }
    }], [{
        key: "getImage",
        value: function getImage(key) {
            return _DataStore.DataStore.getInstance().res.get(key);
        }
    }]);

    return Sprite;
}();
},{"./DataStore.js":4}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.fail = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _Sprite2 = require("../base/Sprite.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var fail = exports.fail = function (_Sprite) {
    _inherits(fail, _Sprite);

    function fail() {
        _classCallCheck(this, fail);

        var image = _Sprite2.Sprite.getImage("qipao");

        var _this = _possibleConstructorReturn(this, (fail.__proto__ || Object.getPrototypeOf(fail)).call(this, image, 0, 0, image.width, image.height, 100, 300, image.width * 0.5, image.height * 0.5));

        _this.flag = false;

        _this.level = 1;
        _this.proportionX = _this.dataStore.canvas.width / 375;
        _this.proportionY = _this.dataStore.canvas.height / 665;
        return _this;
    }

    /** 传入当前位置 */


    _createClass(fail, [{
        key: "draw",
        value: function draw(x, y) {
            _get(fail.prototype.__proto__ || Object.getPrototypeOf(fail.prototype), "draw", this).call(this, this.img, 0, 0, this.img.width, this.img.height, x + this.img.width * 0.2, y - this.img.height * 0.7, this.width, this.height);
        }
    }]);

    return fail;
}(_Sprite2.Sprite);
},{"../base/Sprite.js":7}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.liwu = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _Sprite2 = require("../base/Sprite.js");

var _DataStore = require("../base/DataStore.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var liwu = exports.liwu = function (_Sprite) {
    _inherits(liwu, _Sprite);

    function liwu() {
        _classCallCheck(this, liwu);

        var str = ['liwu1', 'liwu2', 'liwu3'];
        var src = Math.floor(Math.random() * 3);
        var image = _Sprite2.Sprite.getImage(str[src]);

        var _this = _possibleConstructorReturn(this, (liwu.__proto__ || Object.getPrototypeOf(liwu)).call(this, image, 0, 0, image.width, image.height, 60, 515, image.width * 0.5, image.height * 0.5));

        _this.dataStore = _DataStore.DataStore.getInstance();
        _this.src = src;

        _this.top = top;
        // 移动速度
        _this.moveSpace = 1;
        // 判断阶段
        _this.openFlag = false;
        _this.level = 1;
        // 判断礼物是否消失
        _this.liwuFlag = false;
        _this.proportionX = _this.dataStore.canvas.width / 375;
        _this.proportionY = _this.dataStore.canvas.height / 665;
        return _this;
    }

    _createClass(liwu, [{
        key: "draw",
        value: function draw() {
            if (this.x <= 95 * this.proportionX && this.level == 1) {
                this.x = this.x + this.moveSpace;
                this.y = (19045 * this.proportionX * this.proportionY - 17 * this.proportionY * this.x) / (35 * this.proportionX);
            } else if (this.x <= 210 * this.proportionX && this.level == 1) {
                this.x = this.x + this.moveSpace;
                this.y = (51855 * this.proportionX * this.proportionY + 57 * this.proportionY * this.x) / (115 * this.proportionX);
            } else if (this.x <= 273 * this.proportionX && this.level == 1) {
                this.x = this.x + this.moveSpace;
                this.y = (42735 * this.proportionX * this.proportionY - 37 * this.proportionY * this.x) / (63 * this.proportionX);
                if (this.x >= 273 * this.proportionX) {
                    this.level = 2;
                }
            } else if (this.x >= 58 * this.proportionX && this.level == 2) {
                this.x = this.x - this.moveSpace;
                this.y = (75670 * this.proportionX * this.proportionY + 131 * this.proportionY * this.x) / (215 * this.proportionX);
                if (this.x <= 58 * this.proportionX) {
                    this.level = 3;
                }
            } else if (this.x <= 125 * this.proportionX && this.level == 3) {
                this.x = this.x + this.moveSpace;
                this.y = (28365 * this.proportionX * this.proportionY - 42 * this.proportionY * this.x) / (67 * this.proportionX);
            } else if (this.x <= 208 * this.proportionX && this.level == 3) {
                this.x = this.x + this.moveSpace;
                this.y = (22010 * this.proportionX * this.proportionY + 53 * this.proportionY * this.x) / (83 * this.proportionX);
            } else if (this.x <= 280 * this.proportionX && this.level == 3) {
                this.x = this.x + this.moveSpace;
                this.y = (40512 * this.proportionX * this.proportionY - 57 * this.proportionY * this.x) / (72 * this.proportionX);
                if (this.x >= 280 * this.proportionX) {
                    this.level = 4;
                }
            } else if (this.x >= 40 * this.proportionX && this.level == 4) {
                this.x = this.x - this.moveSpace;
                this.y = (40960 * this.proportionX * this.proportionY + 146 * this.proportionY * this.x) / (240 * this.proportionX);
                if (this.x <= 40 * this.proportionX) {
                    this.level = 5;
                }
            } else if (this.x <= 120 * this.proportionX && this.level == 5) {
                this.x = this.x + this.moveSpace;
                this.y = (17400 * this.proportionX * this.proportionY - 45 * this.proportionY * this.x) / (80 * this.proportionX);
            } else if (this.x <= 160 * this.proportionX && this.level == 5) {
                this.x = this.x + this.moveSpace;
                this.y = (180 * this.proportionX * this.proportionY + this.proportionY * this.x) / (2 * this.proportionX);
            } else if (this.x <= 282 * this.proportionX && this.level == 5) {
                this.x = this.x + this.moveSpace;
                this.y = (30820 * this.proportionX * this.proportionY - 63 * this.proportionY * this.x) / (122 * this.proportionX);
            } else {
                this.level = 6;
                this.liwuFlag = true;
            }
            _get(liwu.prototype.__proto__ || Object.getPrototypeOf(liwu.prototype), "draw", this).call(this, this.img, 0, 0, this.img.width, this.img.height, this.x, this.y - this.img.height * 0.5, this.width, this.height);
        }
    }]);

    return liwu;
}(_Sprite2.Sprite);
},{"../base/DataStore.js":4,"../base/Sprite.js":7}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.liwuopen = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _Sprite2 = require("../base/Sprite.js");

var _DataStore = require("../base/DataStore.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var liwuopen = exports.liwuopen = function (_Sprite) {
    _inherits(liwuopen, _Sprite);

    function liwuopen(index, x, y, level) {
        _classCallCheck(this, liwuopen);

        var str = ['liwuopen1', 'liwuopen2', 'liwuopen3'];
        var image = _Sprite2.Sprite.getImage(str[index]);

        var _this = _possibleConstructorReturn(this, (liwuopen.__proto__ || Object.getPrototypeOf(liwuopen)).call(this, image, 0, 0, image.width, image.height, x, y, image.width * 0.5, image.height * 0.5));

        _this.dataStore = _DataStore.DataStore.getInstance();
        _this.top = top;
        // 移动速度
        _this.moveSpace = 1;
        // 判断阶段
        _this.level = level;
        // 判断礼物是否消失
        _this.liwuFlag = false;
        _this.openFlag = true;
        _this.proportionX = _this.dataStore.canvas.width / 375;
        _this.proportionY = _this.dataStore.canvas.height / 665;
        return _this;
    }

    _createClass(liwuopen, [{
        key: "draw",
        value: function draw() {
            if (this.x <= 95 * this.proportionX && this.level == 1) {
                this.x = this.x + this.moveSpace;
                this.y = (19045 * this.proportionX * this.proportionY - 17 * this.proportionY * this.x) / (35 * this.proportionX);
            } else if (this.x <= 210 * this.proportionX && this.level == 1) {
                this.x = this.x + this.moveSpace;
                this.y = (51855 * this.proportionX * this.proportionY + 57 * this.proportionY * this.x) / (115 * this.proportionX);
            } else if (this.x <= 273 * this.proportionX && this.level == 1) {
                this.x = this.x + this.moveSpace;
                this.y = (42735 * this.proportionX * this.proportionY - 37 * this.proportionY * this.x) / (63 * this.proportionX);
                if (this.x >= 273 * this.proportionX) {
                    this.level = 2;
                }
            } else if (this.x >= 58 * this.proportionX && this.level == 2) {
                this.x = this.x - this.moveSpace;
                this.y = (75670 * this.proportionX * this.proportionY + 131 * this.proportionY * this.x) / (215 * this.proportionX);
                if (this.x <= 58 * this.proportionX) {
                    this.level = 3;
                }
            } else if (this.x <= 125 * this.proportionX && this.level == 3) {
                this.x = this.x + this.moveSpace;
                this.y = (28365 * this.proportionX * this.proportionY - 42 * this.proportionY * this.x) / (67 * this.proportionX);
            } else if (this.x <= 208 * this.proportionX && this.level == 3) {
                this.x = this.x + this.moveSpace;
                this.y = (22010 * this.proportionX * this.proportionY + 53 * this.proportionY * this.x) / (83 * this.proportionX);
            } else if (this.x <= 280 * this.proportionX && this.level == 3) {
                this.x = this.x + this.moveSpace;
                this.y = (40512 * this.proportionX * this.proportionY - 57 * this.proportionY * this.x) / (72 * this.proportionX);
                if (this.x >= 280 * this.proportionX) {
                    this.level = 4;
                }
            } else if (this.x >= 40 * this.proportionX && this.level == 4) {
                this.x = this.x - this.moveSpace;
                this.y = (40960 * this.proportionX * this.proportionY + 146 * this.proportionY * this.x) / (240 * this.proportionX);
                if (this.x <= 40 * this.proportionX) {
                    this.level = 5;
                }
            } else if (this.x <= 120 * this.proportionX && this.level == 5) {
                this.x = this.x + this.moveSpace;
                this.y = (17400 * this.proportionX * this.proportionY - 45 * this.proportionY * this.x) / (80 * this.proportionX);
            } else if (this.x <= 160 * this.proportionX && this.level == 5) {
                this.x = this.x + this.moveSpace;
                this.y = (180 * this.proportionX * this.proportionY + this.proportionY * this.x) / (2 * this.proportionX);
            } else if (this.x <= 282 * this.proportionX && this.level == 5) {
                this.x = this.x + this.moveSpace;
                this.y = (30820 * this.proportionX * this.proportionY - 63 * this.proportionY * this.x) / (122 * this.proportionX);
            } else {
                this.level = 6;
                this.liwuFlag = true;
            }
            _get(liwuopen.prototype.__proto__ || Object.getPrototypeOf(liwuopen.prototype), "draw", this).call(this, this.img, 0, 0, this.img.width, this.img.height, this.x, this.y - this.img.height * 0.5, this.width, this.height);
        }
    }]);

    return liwuopen;
}(_Sprite2.Sprite);
},{"../base/DataStore.js":4,"../base/Sprite.js":7}],11:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.tiaowen = undefined;

var _Sprite2 = require("../base/Sprite.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var tiaowen = exports.tiaowen = function (_Sprite) {
    _inherits(tiaowen, _Sprite);

    function tiaowen() {
        _classCallCheck(this, tiaowen);

        var image = _Sprite2.Sprite.getImage("tiaowen");
        // super(image, 0, 0, image.width, image.height, 38, 500, image.width * 0.31, image.height * 0.31);
        // super(image, 0, 0, image.width, image.height, 56, 490, image.width * 0.31, image.height * 0.31);
        return _possibleConstructorReturn(this, (tiaowen.__proto__ || Object.getPrototypeOf(tiaowen)).call(this, image, 0, 0, image.width, image.height, 100, 465, image.width * 0.31, image.height * 0.31));
    }

    return tiaowen;
}(_Sprite2.Sprite);
},{"../base/Sprite.js":7}],12:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.timer = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _DataStore = require('../base/DataStore.js');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var timer = exports.timer = function () {
    function timer() {
        _classCallCheck(this, timer);

        this.ctx = _DataStore.DataStore.getInstance().ctx;
        this.isEnd = false;
    }

    _createClass(timer, [{
        key: 'draw',
        value: function draw(timerStr) {
            this.ctx.font = '24px Arial';
            this.ctx.fillStyle = '#fff';
            // this.ctx.fillText(this.score, DataStore.getInstance().canvas.width / 2, DataStore.getInstance().canvas.height / 18, 800);
            this.ctx.fillText(timerStr, 64, 64, 600);
        }
    }]);

    return timer;
}();
},{"../base/DataStore.js":4}],13:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.timerPlane = undefined;

var _Sprite2 = require("../base/Sprite.js");

var _DataStore = require("../base/DataStore.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// 背景类
var timerPlane = exports.timerPlane = function (_Sprite) {
    _inherits(timerPlane, _Sprite);

    function timerPlane() {
        _classCallCheck(this, timerPlane);

        var image = _Sprite2.Sprite.getImage('second');
        return _possibleConstructorReturn(this, (timerPlane.__proto__ || Object.getPrototypeOf(timerPlane)).call(this, image, 0, 0, image.width, image.height, 30, 20, image.width * 0.5, image.height * 0.5));
    }

    return timerPlane;
}(_Sprite2.Sprite);
},{"../base/DataStore.js":4,"../base/Sprite.js":7}],14:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.win = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _Sprite2 = require("../base/Sprite.js");

var _DataStore = require("../base/DataStore.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var win = exports.win = function (_Sprite) {
    _inherits(win, _Sprite);

    function win() {
        _classCallCheck(this, win);

        var image = _Sprite2.Sprite.getImage("lijuan");

        // this.dataStore = DataStore.getInstance();
        // this.top = top;
        // 移动速度
        var _this = _possibleConstructorReturn(this, (win.__proto__ || Object.getPrototypeOf(win)).call(this, image, 0, 0, image.width, image.height, 100, 300, image.width * 0.5, image.height * 0.5));

        _this.moveSpace = 1;
        // 判断阶段
        _this.level = 1.1;
        // 判断礼物是否消失
        _this.winFlag = false;
        _this.proportionX = _this.dataStore.canvas.width / 375;
        _this.proportionY = _this.dataStore.canvas.height / 665;
        return _this;
    }

    /** 传入当前位置 */


    _createClass(win, [{
        key: "draw",
        value: function draw(x, y) {
            this.x += this.moveSpace;

            this.level -= 1 / 86;
            this.y = (2200 * this.proportionX * this.proportionY + 322 * this.proportionY * this.x) / (100 * this.proportionX);
            if (this.x > 200 || this.y > 622) {
                this.winFlag = true;
                this.level = 0;
                this.ctx.globalAlpha = 0;
                _get(win.prototype.__proto__ || Object.getPrototypeOf(win.prototype), "draw", this).call(this, this.img, 0, 0, this.img.width, this.img.height, this.x, this.y - this.img.height * 0.5, this.width, this.height);
                return;
            }
            if (this.level > 0) {
                this.ctx.globalAlpha = this.level;
            } else {
                this.ctx.globalAlpha = 0;
            }
            // 创建离屏的canvas
            // let  offCanvas = document.createElement("canvas");
            // offCanvas.width=this.img.width;
            // offCanvas.height=this.img.height;
            // let offContext = offCanvas.getContext("2d");
            // offContext.drawImage(this.img, 0, 0, this.img.width, this.img.height, this.x, this.y - this.img.height * 0.5, this.width, this.height);
            // this.ctx.drawImage(offCanvas,0,0);
            _get(win.prototype.__proto__ || Object.getPrototypeOf(win.prototype), "draw", this).call(this, this.img, 0, 0, this.img.width, this.img.height, this.x, this.y - this.img.height * 0.5, this.width, this.height);
            this.ctx.restore();
        }
    }]);

    return win;
}(_Sprite2.Sprite);
},{"../base/DataStore.js":4,"../base/Sprite.js":7}],15:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BackGround = undefined;

var _Sprite2 = require("../base/Sprite.js");

var _DataStore = require("../base/DataStore.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// 背景类
var BackGround = exports.BackGround = function (_Sprite) {
    _inherits(BackGround, _Sprite);

    function BackGround() {
        _classCallCheck(this, BackGround);

        var image = _Sprite2.Sprite.getImage('background');
        return _possibleConstructorReturn(this, (BackGround.__proto__ || Object.getPrototypeOf(BackGround)).call(this, image, 0, 0, image.width, image.height, 0, 0, _DataStore.DataStore.getInstance().canvas.width, _DataStore.DataStore.getInstance().canvas.height));
    }

    return BackGround;
}(_Sprite2.Sprite);
},{"../base/DataStore.js":4,"../base/Sprite.js":7}]},{},[1]);
